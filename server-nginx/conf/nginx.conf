events {}

http {
	upstream nuxt {
		server front:3000;
	}

	upstream fastapi {
		server back:8000;
	}

	log_format api_logs '$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';

	server {
		listen 80;
		server_name localhost;

		access_log /var/log/nginx/access_log;
		error_log /var/log/nginx/error_log;

		# Proxy Nuxt.js (Frontend)
		location / {
			proxy_pass http://nuxt;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# WebSocket support if needed
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}

		# Proxy Express (Backend API)
		location /api {
			rewrite /api(.*) $1 break;  # Strips '/api' from request URL

			proxy_pass http://fastapi;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Forward the Authorization header if using tokens
			proxy_set_header Authorization $http_authorization;

			# Ensure cookies are passed
			proxy_set_header Cookie $http_cookie;

			# WebSocket support if needed
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";

			access_log /var/log/nginx/api_access_log api_logs;
		}
	}
}
